{
  "root": true,
  "plugins": [
    "@typescript-eslint",
    "cypress",
    "jsx-a11y",
    "react-hooks",
    "react",
    "react-refresh"
  ],
  "extends": [
    "eslint:recommended",
    "plugin:@typescript-eslint/recommended",
    "plugin:cypress/recommended",
    "plugin:jsx-a11y/recommended",
    "plugin:react/jsx-runtime",
    "plugin:react/recommended",
    "plugin:react-hooks/recommended",
    "prettier"
  ],
  "overrides": [
    {
      "files": [
        "*.ts",
        "*.tsx",
        "*.js",
        "*.jsx"
      ],
      "rules": {
      }
    },
    {
      "files": [
        "*.ts",
        "*.tsx"
      ],
      "parserOptions": {
        "ecmaFeatures": {
          "jsx": true
        },
        "project": [
          "./tsconfig.base.json"
        ]
      },
      "settings": {
        "import/resolver": {
          "typescript": {
            "alwaysTryTypes": true,
            "project": [
              "apps/*/tsconfig.json",
              "libs/*/tsconfig.json"
            ]
          }
        },
        "react": {
          "version": "detect"
        }
      },
      "rules": {
        "@typescript-eslint/no-unused-vars": "off",
        "@typescript-eslint/no-non-null-assertion": "off",
        "@typescript-eslint/default-param-last": "error",
        "@typescript-eslint/no-duplicate-imports": "error",
        "@typescript-eslint/no-empty-function": "off",
        "@typescript-eslint/no-magic-numbers": "warn",
        "@typescript-eslint/no-unused-expressions": "error",
        "@typescript-eslint/no-useless-constructor": "error",
        "camelcase": "warn",
        "default-case-last": "error",
        "eqeqeq": "error",
        "no-else-return": "error",
        "no-multi-assign": "error",
        "no-nested-ternary": "warn",
        "no-return-await": "error",
        "no-unused-vars": "off",
        "no-useless-call": "error",
        "no-useless-concat": "error",
        "no-useless-return": "error",
        "no-var": "error",
        "prefer-arrow-callback": "error",
        "prefer-const": "error",
        "prefer-regex-literals": "error",
        "react/prop-types": "off",
        "react/jsx-uses-react": "off",
        "react/react-in-jsx-scope": "off"
      }
    },
    {
      "files": [
        "*.js",
        "*.jsx"
      ],
      "rules": {}
    }
  ]
}
